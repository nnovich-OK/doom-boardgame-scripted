#include Console/console++

-- TODO: maybe join mnstList, mnstCount and mnstStats somwhere in one place
mnstList = {
  "Zombie",
  "Trite",
  "Imp",
  "Demon",
  "Mancubus",
  "Archvile",
  "Hellknight",
  "Cyberdemon",
}

allPlayerColors = {"Red", "Green", "Blue", "White"}

function onload()
  -- assets sometimes load later than they are needed by objects
  -- so blank squares are shown instead of images for armor, speed etc
  -- workaround - refresh XML to redraw interfaces
  refreshObjectUI()

  instances().preproc.call("preprocess")
end

function onPlayerConnect(player)
  -- assets sometimes load later than they are needed by objects
  -- so blank squares are shown instead of images for armor, speed etc
  -- workaround - refresh UI for all objects
  -- needed to be done for each player individually
  refreshObjectUI()
end

function refreshObjectUI()
  Wait.time(
    function()
      broadcastToAll("Refreshing object interfaces after new player connected", Color.Orange)
      for _,v in ipairs(getAllObjects()) do
        local xml = v.UI.getXml()
        if xml and xml ~= "" then
          v.UI.setXml(xml)
        end
      end
    end,
    5)
end

function instances()
  return {
    calc = getObjectFromGUID("6411e1"), -- damage calculator
    hotkeys = getObjectFromGUID("0c9765"), -- hotkey handler
    preproc = getObjectFromGUID("e8056f"), -- xml preprocessor
    creator = getObjectFromGUID("4abf42"), -- monster creator
    vis = getObjectFromGUID("ad25a3"), -- interface visibility manager
    inv = getObjectFromGUID("cb7512"), -- inventory
    click = getObjectFromGUID("300ffb"), -- doubleclickHandler
  }
end


function isSingleFigurine(obj)
  return obj.tag == "Figurine" and obj.getQuantity() == -1
end

function isMonster(obj)
  if not isSingleFigurine(obj) then
    return false
  end

  local name = obj.getName()
  for i,v in ipairs(mnstList) do
    if (string.find(name, v, 1, true)) then
      return true
    end
  end

  return false
end

function isMarine(obj)
  if not isSingleFigurine(obj) then
    return false
  end

  return (string.find(obj.getName(), "Marine", 1, true) ~= nil)
end

function isCharacter(obj)
  return isMonster(obj) or isMarine(obj)
end

function getCharacterColor(obj)
  if isCharacter(obj) then
    local name=obj.getName() or ""
    for _, clr in ipairs(allPlayerColors) do
      if string.find(name, clr, 1, yes) then
        return clr
      end
    end
  end

  return nil
end