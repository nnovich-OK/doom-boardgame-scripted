require("instances")
require("utils")
require("constants")

local saveData = {}
local score = {Red=0, Green=0, Blue=0}


-- Local methods declaration
local refreshUI

function onLoad(save_state)
  if save_state and save_state ~= "" then
    saveData = JSON.decode(save_state)
  end
end


function onPreprocFinished()
  if saveData.score then
    score = saveData.score
    for _, clr in ipairs(constants.allMarineColors) do
      refreshUI(clr)
    end
  end
end

function onSave()
  self.script_state = JSON.encode({score=score})
end

function changeScore(req)
  if not req.color or not req.delta or req.delta == 0 then
    log(req, "ERROR changeScore incorrect request")
    return
  end

  newScore = score[req.color] + req.delta
  if newScore < 0 then
    return false
  else
    score[req.color] = newScore
    refreshUI(req.color)

    local sign = req.delta > 0 and "+" or "" -- minus will be printed anyway
    local msg = utils.getActorLabel(req.color) .. " score: " .. newScore
      .. " (" .. sign .. tostring(req.delta) .. ")"

    printToAll(msg, req.color)
  end

  return true
end

function refreshUI(color)
  Global.UI.setAttribute("scoreText"..color, "text", score[color])
  Global.UI.setAttribute("scoreInput"..color, "text", score[color])
end

function onScoreEdit(player, value, id)
  if value == "" then
    value = "0"
  end

  local field, color = utils.stripXmlFieldColor(id)
  score[color] = tonumber(value, 10)
  refreshUI(color)

  printToAll(utils.getActorLabel(color) .. " score: " .. score[color] .. " (manual change)", color)
end

function resetScore()
  for _, clr in ipairs(constants.allMarineColors) do
    score[clr] = 0
    refreshUI(clr)
  end
end

function onLevelUpClick(player, value, id)
  instances.vis.call("toggleInterface", {color="Red|Green|Blue|White", id="lvlupMenu"})
end