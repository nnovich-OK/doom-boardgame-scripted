fragsScored = 0
fragLimit = 6

fragTintColors = {
  ["Red died"]="rgba(1, 0.6, 0.6, 1)",
  ["Green died"]="rgba(0.6, 1, 0.6, 1)",
  ["Blue died"]="rgba(0.6 0.6, 1, 1)",
}

function onPreprocFinished()
  Global.UI.setAttribute("inventoryPanel" .. "Red", "color", "rgba(0.14, 0, 0, 0.95)")
  Global.UI.setAttribute("inventoryPanel" .. "Green", "color", "rgba(0, 0.1, 0, 0.95)")
  Global.UI.setAttribute("inventoryPanel" .. "Blue", "color", "rgba(0, 0, 0.1, 0.95)")

  Global.UI.setAttribute("giveToRedItemRed", "active", "false")
  Global.UI.setAttribute("giveToGreenItemGreen", "active", "false")
  Global.UI.setAttribute("giveToBlueItemBlue", "active", "false")
end

function showFrags(player, value, id)
  Global.call("instances").vis.call(
    "toggleInterface", {id="fragsPanel", color=player.color})
end

function updateFrag(player, value, id)
  if Global.call("instances").click.call("isDoubleClick",
    {color = player.color, id = id})
  then
    if player.color ~= "White" then
      broadcastToColor("Only white player can change frags",
        player.color,
        stringColorToRGB(player.color))
      return
    end

    local buttonNumber = string.match(id, "(%d+)")
    buttonNumber = tonumber(buttonNumber, 10)
    if buttonNumber > fragsScored then
      -- inactive button is hit, add new frag
      addFrag("manual")
    else
      -- active button is hit, remove frag
      -- it's the only way to remove frag
      Global.UI.setAttribute("fragImage" .. fragsScored, "color", "rgba(0.4, 0.4, 0.4, 1)")
      Global.UI.setAttribute("frag" .. fragsScored, "tooltip", "Double click to add")
      fragsScored = fragsScored-1
      broadcastToAll("Frag manually removed! Total: " .. fragsScored, Color.Orange)
    end
  end
end

-- source must be "manual", "<Color> died" or "full deck"
function addFrag(source)
  if (fragsScored >= fragLimit) then
    broadcastToAll("Can't add more frags! Already " .. fragLimit, Color.Orange)
  end

  fragsScored = fragsScored + 1

  Global.UI.setAttribute(
    "fragImage" .. fragsScored,
    "color",
    fragTintColors[source] or "White")
  Global.UI.setAttribute("frag" .. fragsScored, "tooltip", "Double click to remove")
  broadcastToAll("New frag (" .. source .. ")! Total: " .. fragsScored, Color.Orange)

  --TODO: allow showing to multiple colors. Iteration isn't an answer as setAttribute
  -- takes some time to apply
  --[[Global.call("instances").vis.call(
    "showInterface",
    {id="fragsPanel", color="White|Red|Green|Blue"})]]

end

function showInventory(player, value, id)
  Global.call("instances").vis.call("toggleInterface", {id="inventoryPanel"..value, color=player.color})
end
