local mnstCount = {
  Zombie     = 4,
  Trite      = 4,
  Imp        = 4,
  Demon      = 2,
  Mancubus   = 2,
  Archvile   = 2,
  Hellknight = 2,
  Cyberdemon = 1,
}

-- Local methods declaration
local getNameAndColor
local getBagDetails

-- returns non-empty name only for monsters
function getNameAndColor(fullname)
  local name = ""
  local color = ""

  for k in pairs(mnstCount) do
    if string.find(fullname, k, 1, true) then
      name = k
      break
    end
  end

  for _, v in ipairs({"Red", "Green", "Blue"}) do
    if string.find(fullname, v, 1, true) then
      color = v
      break
    end
  end

  return name, color
end

function getBagDetails(fullname)
  local details = {}

  details.name, details.color = getNameAndColor(fullname)

  for k in string.gmatch(fullname, "x(%d+)") do
    details.count = tonumber(k)
    break
  end

  return details
end


function onObjectLeaveContainer(container, object)
  local details = getBagDetails(container.getName())
  if details.name == "" then
    return
  end

  if details.count == 0 then
    broadcastToAll("No figures left of ".. details.color .. " " .. details.name, Color.Oragne)
    object.setName("")
    object.destruct()
    return
  end

  container.setName(details.color .. " " .. details.name .. " x" .. (details.count-1))
  object.setName(details.color .. " " .. details.name)

  object.UI.setXml(mnstXml)
  object.setLuaScript(mnstScript)
end

function onObjectDestroy(obj)
  local name, color = getNameAndColor(obj.getName())
  if name == "" then return end

  -- find related bagw
  for _,bag in ipairs(getAllObjects()) do
    if bag.getQuantity() ~= -1 then
      local bagDetails = getBagDetails(bag.getName())
      if bagDetails.name == name and bagDetails.color == color then
        bagDetails.count = bagDetails.count+1
        if bagDetails.count > mnstCount[name] then
          bagDetails.count = mnstCount[name]
        end
        bag.setName(bagDetails.color .. " " .. bagDetails.name .. " x" .. bagDetails.count)
      end
    end
  end
end


mnstXml = [[
<Defaults>
   <Button fontSize="80" fontStyle="Bold" textColor="#FFFFFF" color="#00000000"/>
   <Text fontSize="80" fontStyle="Bold" color="#FFFFFF" outline="#000000"/>
</Defaults>

<Panel id="panel" position="0 0 -240" rotation="0 90 270" scale="0.2 0.2">
   <Panel color="#000000" height="100" width="600">
      <ProgressBar id="progressBar" height="90" width="590" showPercentageText="false" color="#000000" percentage="100" fillImageColor="#710000">
      <!-- Defeat monster at 0 hp -->
      <Panel id="defeatPanel" height="100" width="600" offsetXY="0 0" active="false">
         <Button onClick="defeatClick" text="Defeat"/>
      </Panel>
      <!-- Health Bar -->
      <HorizontalLayout>
         <Panel id="health" width="300">
            <Text id="healthbar" width="600"></Text>
         </Panel>
      </HorizontalLayout>
   </ProgressBar>
   </Panel>


   <Panel id="armorPanel" height="200" width="150" offsetXY="-390 0">
      <Image image="shield" color="yellow" offsetXY="0 -8" height="250" width="250">
        <Text id="armor" height="150" width="150" offsetXY="0 8" text="2"></Text>
      </Image>
   </Panel>

   <Panel id="speedPanel" height="200" width="150" offsetXY="410 -20">
      <Image image="3arrow" color="Blue" height="200" width="200" offsetXY="0 10">
        <Text id="speed" height="200" width="200" offsetXY="0 8" text="3"></Text>
      </Image>
   </Panel>

</Panel>
]]


mnstScript = [[
mnstStats = {
  Zombie     = {speed=3, armor=2, health=2},
  Trite      = {speed=5, armor=1, health=1},
  Imp        = {speed=4, armor=2, health=1},
  Demon      = {speed=4, armor=3, health=2},
  Mancubus   = {speed=2, armor=3, health=3},
  Archvile   = {speed=4, armor=3, health=2},
  Hellknight = {speed=3, armor=4, health=3},
  Cyberdemon = {speed=4, armor=5, health=4},
}

-- mnstAttackDice
-- mnstSpecial

identity = {
  fullname = "",
  name = "",
  color = "",
}

health = {
   value = 10,
   max = 10,
}

function getIdentity(name)
  identity.fullname = name

  for k in pairs(mnstStats) do
    if string.find(name, k, 1, true) then
      identity.name = k
    end
  end

  for _, v in ipairs({"Red", "Green", "Blue"}) do
    if string.find(name, v, 1, true) then
      identity.color = k
    end
  end

end

function onLoad(save_state)
  getIdentity(self.getName())

  health.max = mnstStats[identity.name].health
  health.value = health.max

   if save_state ~= "" and self.getDescription() ~= "" then
      saved_data = JSON.decode(save_state)

      -- XML
      if saved_data.xml then
         self.UI.setXml(saved_data.xml)
      end

      -- Health
      if saved_data.health then
         health = saved_data.health
      end
    end
  Wait.condition(updateHealthUI, checkLoaded)
  Wait.condition(function()
     self.UI.setAttribute("armor", "text", mnstStats[identity.name].armor)
     self.UI.setAttribute("speed", "text", mnstStats[identity.name].speed)
   end,
   checkLoaded)

  createBtns()
end

function checkLoaded()
   if not self.loading_custom and not self.spawning then
      return true
   end
   return false
end

function onSave()
   local save_state = JSON.encode({health = health, xml = self.UI.getXml()})
   -- local save_state = ""
   self.script_state = save_state
end

function createBtns()
  local buttonParameter = {
    click_function = "add",
    function_owner = self,
    position = {0.3, 0.02, -0.2},
    rotation= {0, 90, 0},
    label = "+",
    width = 250,
    height = 250,
    font_size = 300,
    color = {0,0,0,0.1},
    font_color = {1,1,1,7}}
  self.createButton(buttonParameter)
  buttonParameter.position = {0.3, 0.02, 0.2}
  buttonParameter.click_function = "sub"
  buttonParameter.label = "-"
  self.createButton(buttonParameter)
end

function add(self, playerColor, value, id) healthChange(playerColor, "add") end
function sub(self, playerColor, value, id) healthChange(playerColor, "sub") end

-- Do the appropriate healing / damaging
function hits(player, change)
  healthChange(player.color, change)
end

function healthChange(playerColor, change)
  local oldHP = health.value
  local tabInfo = getNotebookTabs()
  local tab = ""

  if change == "add" then
    health.value = health.value + 1
  elseif change == "addMax" then
    health.value = health.value + 1
    health.max = health.max + 1
  elseif change == "sub" then
    health.value = health.value - 1
  elseif change == "subMax" then
    health.value = health.value - 1
    if health.max > 0 then health.max = health.max - 1 end
  end

  -- Boundary-check health values
  if health.value > health.max then health.value = health.max end
  if health.value < 0 then health.value = 0 end
  updateHealthUI()

  if change == "add" then
     if oldHP ~= health.value then
        printToAll("HP of " .. self.getName() .. ": " .. health.value .. " (+1)", stringColorToRGB(playerColor))
     end
  elseif change == "sub" then
     if oldHP ~= health.value then
        printToAll("HP of " .. self.getName() .. ": " .. health.value .. " (-1)", stringColorToRGB(playerColor))
     end
  end
end

-- Sets health in the UI
function updateHealthUI()

   -- Activate defeat interface
   if health.value < 1 then
      self.UI.setAttribute("defeatPanel", "active", true)
      self.UI.setAttribute("healthbar", "active", false)
      self.UI.setAttribute("editButton", "active", false)
   else
      self.UI.setAttribute("defeatPanel", "active", false)
      self.UI.setAttribute("healthbar", "active", true)
      self.UI.setAttribute("editButton", "active", true)
   end

   self.UI.setAttribute("progressBar", "percentage", health.value / health.max * 100)
   self.UI.setAttribute("healthbar", "text", health.value .. "/" .. health.max)
   self.setDescription(health.value .. "/" .. health.max)
   self.UI.setAttribute("panel", "position", "0 0 -" .. self.getBounds().size.y / self.getScale().y * 110) --ART: there was additional correction
end

function defeatClick(player, value, id)
  self.destruct()
end
]]