-- Local methods declaration
local interfaceRequestCorrect
local hideOtherInventories
local fixPipes
local changeVisibility

function interfaceRequestCorrect(req)
  return req and req.id and req.color
end


function hideOtherInventories(req)
  local fieldName, fieldColor = Global.call("stripXmlFieldColor", req.id)

  if fieldName == "inventoryPanel" then
    -- remove visibility from all other panels
    for _,clr in ipairs(Global.getTable("allPlayerColors")) do
      if clr ~= "White" and clr ~= fieldColor then
        changeVisibility("inventoryPanel" .. clr, req.color, "rem")
      end
    end
  end
end

function showInterface(req)
  if interfaceRequestCorrect(req)
  then
    hideOtherInventories(req)

    changeVisibility(req.id, req.color, "add")
  end
end

function hideInterface(req)
  if interfaceRequestCorrect(req)
  then
    changeVisibility(req.id, req.color, "rem")
  end
end

function toggleInterface(req)
  if interfaceRequestCorrect(req)
  then
    hideOtherInventories(req)
    changeVisibility(req.id, req.color, "tgl")
  end
end

-- remove trailing, leading and double pipes
-- "|Red||White|Blue|" becomes "Red|White|Blue"
function fixPipes(str)
  --trim
  local trimmed = string.gsub(str, "^|*(.-)|*$", "%1")
  --remove doulbes
  return (string.gsub(trimmed, "||+", "|"))
end

-- mode is add/rem/tgl
function changeVisibility(id, color, mode)
  local visBase = Global.UI.getAttribute(id, "visibility")
  local act = Global.UI.getAttribute(id, "active")

  local vis = visBase
  for color in string.gmatch(color, "[^|]+") do
    if not string.find(vis or "", color, 1, true) then
      if mode == "add" or mode == "tgl" then
        vis = (vis or "") .. "|" .. color
      end
    else
      if mode == "rem" or mode == "tgl" then
        vis = string.gsub(vis or "", color, "")
      end
    end
  end

  vis=fixPipes(vis)
  --log(
  --  (visBase or "") .. " => " .. (vis or ""),
  --  mode .. " visibility of " .. id .. " for " .. color .. ":")

  if vis~=visBase then
    Global.UI.setAttribute(id, "visibility", fixPipes(vis))
  end

  if act~="true" and vis and vis ~= "" then
    Global.UI.setAttribute(id, "active", "true")
  elseif act=="true" and (not vis or vis == "") then
    Global.UI.setAttribute(id, "active", "false")
  end
end